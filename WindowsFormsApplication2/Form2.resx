<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AKfHcQKHtUgwjLhQU4m2
        T0uZv2Vcmb9lWom2T0yNuVNSibZLLLnVhwH///8A////AP///wD///8A////AP///wD///8A////AP//
        /wD///8A9fX1AP///wD///8A////AP///wD///8A////AP///wD///8A////AIu4USuJtktVirJPVYyI
        TWGGWz92glU3l3xKI598SySfglU2lYhgRXWLi0tgjrZVV4i2SFSCszsj////AP///wD///8A////AP//
        /wD///8A////AP///wD19fUA////AP///wD///8A////AP///wD///8A////AJW9Yh+Ktk9cipRKVYFU
        NZl/Ty7sgFEw5INVNuSHXEDQiWBGkIlgSMaGWz/Ghlw/xYBRMNl9SyXqgVQ0k4maSVOKt05ch7VIFf//
        /wD///8A////AP///wD///8A////APX19QD///8A////AP///wD///8A////AP///wCNuFVHka5bWIJV
        NpqBUzTihls/t4ZcQLOHXD+lgFIx8Y9pUqeRbVaklXNe149pUauTbleSjmZNmYpiSaqMZEu3fk0p94NY
        OZGQsVhZi7dRPv///wD///8A////AP///wD///8A9fX1AP///wD///8A////AP///wDl79AAj7lZWo6O
        U1h+TiriimFGv4piR5yQalKGimJIx4RXOdWDVznFgFAvl4NXOoiDVzqJgVIzmoRXOciFWTzWimFHpopg
        RsCQalOyf1At2H9QL9qMlVFVjLdRUf///wD///8A////AP///wD19fUA////AP///wD///8A////AJG6
        XlqDeThWgFAt34dcQNWTbleMhFg80IBRMN6JcEh9iatJYI+5WFWMt1RRgIkwqIKONp+OuFZRjrlVVImp
        SWOFZjx/gVMz2IdeRNaRbFSAgFEvv3xJIuyTkF1ejrlXUv///wD///8A////APX19QD///8A////AP//
        /wCPuldGjY9RV3xJIvOFWTumhVk95H9OK++EXjmLha9DWo24U0rA2JwF////AP///wB7SCCAe0ggcP//
        /wD///8AmsFbBoe1SkuNsVNgglk1k4RYOsOEWDq3e0gg/3xJIuyLlk9TjbhUPP///wD///8A9fX1AP//
        /wD///8Aj7paGoapQ1J+TCjee0gg/3xKJPOBVDTajYRQcH+JMrSFYD5u////AP///wD///8Aq415Dn9P
        L46AUTF0////AP///wD///8A////AINhOX+EkkGthHI7cH1MJ/h7SCD/e0gg/35OK9ORtFpclLxgEf//
        /wD19fUA////AP///wCLt05dhVo+l3tIIP97SCD/e0ki/YyDT3GLt1NSi2FGH35PLOePaVE3hVk9ioFS
        MtyBVDT4fEki735MKP2AUC/ahFg6iJh2YhiNZk0sf08s5ZNxWhaCs0BVindJdntJIf97SCD/e0gg/4RX
        OISItkpZ////APX19QD///8AirdOJYiZRlR8SSP7e0gg/3tIIP+FXzyPj7lYYv///wD///8AhFc5oXxK
        JPuFWT2TlHBaML6mlQJ7SCCAfUsncpVzXTKDVzqTf08t64JUNdaIXkNj////AMrfoAGJtkthg1g4nHtI
        IP97SCD/fk4r95GqWVyFtEIX9fX1AP///wCMuFFVglU4k3tIIP97SCD/f1Av44uyUGCxzYsJ////AIde
        Q3N+TCjagFAv4pJtViv///8A////AHtIIIB7SCBw////AP///wCJX0Ree0gg/4VaPGv///8A////AJK7
        Wg6MrVBgfUsm7HtIIP97SCD/hVo9gou3UFX19fUAv9qRAYu1TlZ+TSnpe0gg/3BKTv9tXXGjZpKAf/39
        /gAtVp0hcFJg6EpUjVtpV3KebVZrqwBTokAAU6JAa0tan3tIIHD///8A////AINWObCFX06CcFBa+VZc
        jVsAU6JAAFOiGYe1R1GHZESMe0gg/3tIIP9zUVbdbJaCggBToi6Qulkoi5BLYXtIIP93STj/M1GW/yJb
        n/8EVKL/AFOiPABTonkAU6L/AFOi/whUov8xU5n/ClOi/wBTov9NT4T/e0ggcP///wCSa1IcgFEx4kph
        nSEfVJ7/LFOa/wBTov8AU6KdmL5kDI6kVmt8SSL/eUkw/zVRlf8hWp//FVihg4q3UU+HXkBte0gg/2RM
        af8tU5r/Hluf/wBTov8AU6KXAFOiPQBTooAAU6LvAFOi/0BSkP86UZP/AFOi/01PhP97SCBw////AIJU
        NHmCVTaBAFOiHANTov8vUpn/FVSh/wBTou4AU6JTZI6Jjm1SZfFdTXL/MFGX/yFVn/9tloFLjLdQToFT
        M42FWj7OSFeS7ylUnP8dW5/xAFOi/wBTouwBU6II////AABTot8AU6L/SVmS1VFQgv8AU6L/TU+E/3tI
        IHAAU6LHLlOZ/zRXnF0AU6IcAFOi/yhTnP8gU57/AFOi/wBTov8gXJ//KlOb/ytUnP8vUpj/KlScxpK7
        W1eHtUlKhVo/n3NLTOEpVZ7/JFOc/0V1k3gAU6L7AFOi/wBTolOEWDlCOFSW8yhTnP9PVInbVlKB+ylT
        nP9ST4D/clBYzypTnP8wUpj/PlWV23tXVKooU5z/LlOa/yVTnP8AU6L/AFOi1058jptbV4TKMlab/zBS
        mf9YWoqQk7tgUYe1SEqEWTydYVR4/TFXnP8lU5ztjLRoVwBTorsAU6L/AFOiro9rVygwVpzrIlWf/0hZ
        lcRJV5HKKlSc/0ZZlsRMWZLPLFSb/ztXmfYiVZ//aV+BniJVn/8sVJz/RVaS4wBTov8AU6LzhrFgVWJa
        gJ8pVJz/NVSY/39bU5CRu11RjLhTToBSNIw+UpH/LVad/0dZlbKKtk9PAFOiZABTov8AU6L5AFOiFABT
        ot8AU6L/AFOinx9Un6kqU5v/AFOitABTovc6UpT/Wl2NWwBTov8AU6K6AFOi/yhTnP9KWpV2AFOi8wBT
        ov9pk4KiP1mZvStWnv9RUIL/h1xBfJG7WFaNuVRQa2WDbTFSl/8uVJv/bldsyIu3TlMBU6IQAFOi+QBT
        ov8AU6JsAFOi3wBTov8AU6KfAlOiqTBTmf8FU6L9ClSi/2BUedv///8AAFOixQBTov4DU6L/L1KZ/yJU
        n2AAU6KiAFOi/yxjncQxVJn5LVad/2xOYP+Lc0lkhrRJQZG7WyRMdZLMMFKY/zdVmfmLZVDHiKVEY5rA
        YwgAU6KzAFOi/wBTotEAU6LrAFOi/wBTosQAU6LKKVOb/xdUoP8lVJ3/fVZMl////wAAU6JSAFOi/yBU
        nv8sU5r/AFOiYABTokQKVaL/I1qe/zBVm/81VZr2e0oq/o+lVmKhxHITR2ymCS1infsvUpn/VViJ05Fq
        UqSHZ0KEirdQUABTolcEVKL/KlSc/xNUof8AU6L/AFOi/wBTov8gVJ7/IlOd/1VQf/+JYkhV////AAhU
        ogIWVKDbMFKZ/xVUoP8AU6JgBFOjAxxbn+MmVJ3/L1Wc/1hRfvGAUTHXjbhVVvX19QAAU6IVV4SIlWBW
        fat6VVHkkm1UjIVZPdSJrUleWYiCFwBTomBUWIqEZ05m/VZaipUAU6JgAFOiYEdcmXFmU3HXe1RM3Jt6
        ZRX///8AjGZMOnNRV+VNVIt+AFOiYABToiSJtkwScI1+jWhXc81rZIete1RL/4RaOXqMt1JV9fX1AP//
        /wCRulsgi6FMVnxKI/eIXkOrimBFo4hgQ5uKtk9i5e/RAf///wCGXEBSf08t6YJVNp6NZk4+vaeWB4RY
        O9iFWTzWh1w/PoFUNKGAUC/pi2JIUP///wD///8A1OS/Aom2TmOFWj2ljGNJoIxjSZiAUjLzj6xXW5m/
        ZRX19fUA////AP///wCJtk1aglQzin5OKueSbVaSg1U1woh2RHSFtEdX////AP///wCOZEgRg1Y2e4FS
        Ms9/Tyz3fUsl/n1MKPmBUzLNglMzdp+AbxL///8A////AOTu0AOAsThbh2tBfYZcQb+KYUiThFg724Ve
        PnuKt05Z////APX19QD///8A////AIu3TROLsU5XgFIy2IRZPcONZk2CiF5Dxop3SXaHtUhglLxfDf//
        /wD///8A////ANzRxwOJYEaFiF5Dbv///wD///8A////AP///wCZvmoTjrhWZ4VqPXyGWj7ckmxUf4db
        PriBUzTGjrZXXI+6Twz///8A9fX1AP///wD///8A////AI25VD2PmFZWfUsl7IRWN6F9TCj2gVMz04lj
        R5mLrlBgjLhRU5a+XQr///8A////AIleQ0qNZk45////AP///wCav2YPibZKVJKuW2WEWTylhVk8x3xL
        JfyKYknVfk0q55GjWlaItksz////AP///wD19fUA////AP///wD///8A////AIu3UFCOjVRafEki7INX
        OMyIXUO4jWVMmIheQ8uEXzqFjqZVaoy4UVONuVZQjqpRaJGzV12OuFdQirZMU42iUWuHYECKiV9FzIZb
        P9+QalKKf04s93xKJOWUmV1ajrlWSf///wD///8A////APX19QD///8A////AP///wD///8A////AIy3
        UVCOmFJVfk0p1YNWOeODVzrGjWVMkYphR5uJX0XAimJIvIVZPKiBUzSVglU4l4VZPJuGWz/Jf08s8I1l
        TKmTblh4iV9ExIBQL/WBUzPPmKdnWoy4U0j///8A////AP///wD///8A9fX1AP///wD///8A////AP//
        /wD///8A////AIi1SDqNslJYhFk7in5OKvGCVDXejWZNpoVZPa+JX0XFimFHnIheQ8CPaE+ohFY4rJFt
        V56Ub1dwjWVMvn9QL9l9SybziWNGg4iySleMt1I2////AP///wD///8A////AP///wD19fUA////AP//
        /wD///8A////AP///wD///8A////AJG7WROJtkxbjqVTWIRXOoiAUTHkfU0p8H1MKOl+TSrwgVIy2o1n
        UPGGWz/Rf08t239PLeyAUTHehFk7goilRVWItkxah7ZGDf///wD///8A////AP///wD///8A////APX1
        9QD///8A////AP///wD///8A////AP///wD///8A////AP///wCJt1AdjLdRVZC6WFiNmVBhjGtNaYNW
        OIiAUjOTf1AwkoVZPIeNbk5nj55UYpG6W1mMt1JVjrhSGP///wD///8A////AP///wD///8A////AP//
        /wD///8A9fX1AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A+fv1AJa9
        YSCLt09NkbpdU4m2SkuJtktLjrlYUou3TkuZv2cc////AP///wD///8A////AP///wD///8A////AP//
        /wD///8A////AP///wD19fUA/+AH//+AAf/+AAB//AAAP/gAAB/wAAAP4AZgB8AceAPAAAADgMACAYCG
        YwEBAGAAAABAAAAAQAAAQAAAAAAAAAAAAAAAAAAAAAAgAAAAIAAAACABAAAgAYBABgHAYAwDwBx4A+AG
        YAfwAAAP+AAAH/wAAD/+AAB//4AB///wD/8=
</value>
  </data>
</root>